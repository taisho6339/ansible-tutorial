---
    - hosts: all
      become: yes
      vars:
          base_locale: LANG=ja_JP.UTF-8
      tasks:
          - name: 基本パッケージをインストール
            apt: name={{item}} state=present update_cache=yes
            with_items:
                - git
                - vim
                - ntp
                - language-pack-ja

          - name: ロケール設定
            command: update-locale {{base_locale}}

          - name: タイムゾーンシンボリックリンク作成
            file: src=/usr/share/zoneinfo/posix/Asia/Tokyo dest=/etc/localtime group=vagrant owner=vagrant state=link force=yes

          - name: タイムゾーン設定
            command: dpkg-reconfigure -f noninteractive tzdata

          - name: ntpdを起動、自動起動の有効化
            service: name=ntp state=started enabled=yes

          - name: Apacheをインストール
            apt: name=apache2 state=present
            tags:
                - apache

          - name: apache2.confテンプレートを転送
            template:
                src=files/apache/apache2.conf.j2
                dest=/etc/apache2/apache2.conf
                owner=root
                group=root
                mode=0644
            tags:
                - apache
            notify:
                - Apacheを再起動

          - name: vhosts.confテンプレートを転送
            template:
                src=files/apache/vhosts.conf.j2
                dest=/etc/apache2/sites-available/vhosts.conf
                owner=root
                group=root
                mode=0644
            tags:
                - apache
            notify:
                - Apacheを再起動

          - name: Apacheを起動、自動起動を有効化
            service: name=apache2 state=started enabled=yes
            tags:
                - apache

          - name: レポジトリを追加するためにsoftware-properties-commonをインストール
            apt: name=software-properties-common state=present update_cache=yes
            tags:
                - php

          - name: ppaレポジトリを追加
            apt_repository: repo='ppa:ondrej/php'
            tags:
                - php

          - name: PHP7.0をインストール
            apt: name={{item}} state=present update_cache=yes
            with_items:
                - php7.0
                - php7.0-cli
                - php7.0-fpm
                - php7.0-pdo
                - php7.0-pgsql
                - php7.0-mbstring
                - php7.0-mcrypt
                - php7.0-dev
                - php7.0-common
                - php-pear
                - php7.0-opcache
                - php7.0-json
                - php-memcached
                - php7.0-zip
            tags:
                - php

          - name: カスタムphp.iniをコマンドライン用のフォルダに作成
            copy: src=files/php/zzmyphp.ini dest=/etc/php/7.0/cli/conf.d/zzmyphp.ini
            notify:
                - Apacheを再起動
            tags:
                - php

          - name: Apache2用のカスタムphp.iniを配置するためのフォルダを作成
            file:
                path=/etc/php/7.0/apache2
                state=directory
                owner=vagrant
                group=vagrant
                recurse=yes
            tags:
                - php

          - name: カスタムphp.iniをApache2用のフォルダに作成
            copy: src=files/php/zzmyphp.ini dest=/etc/php/7.0/apache2/zzmyphp.ini
            ignore_errors: True
            notify:
                - Apacheを再起動
            tags:
                - php
                - apache

          - name: composer.pharインストール
            shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer creates=/usr/bin/composer
            tags:
                - php

          - name: PostgreSQLをインストール
            apt: name=postgresql-9.3 state=present
            tags:
                - postgresql

          - name: PostgreSQLデータベースを初期化
            command: /usr/bin/pg_createcluster
            args:
                creates: /etc/postgresql/9.3/main/postgresql.conf
            tags:
                - postgresql

          - name: pg_hba.confテンプレートを転送
            template: src=files/postgresql/pg_hba.conf.j2 dest=/etc/postgresql/9.3/main/pg_hba.conf
            tags:
                - postgresql

          - name: PostgreSQLを起動、自動起動を有効化
            service: name=postgresql state=started enabled=yes
            tags:
                - postgresql

          - name: ユーザ作成に必要なPythonモジュールをインストール
            apt: name=python-psycopg2 state=present
            tags:
                - postgresql

          - name: PostgreSQLユーザを作成
            postgresql_user:
                name={{db_username}}
                password={{db_password}}
                role_attr_flags=CREATEDB,NOSUPERUSER
            become_user: postgres
            tags:
                    - postgresql

          - name: アプリケーションデータベースを作成
            postgresql_db: name={{item}} owner={{db_username}} encoding=UTF-8 template=template0
            become_user: postgres
            with_items:
                - "{{db_database}}"
                - "{{db_test_database}}"
            tags:
                - postgresql

          - name: アプリケーションのコードをデプロイ
            git:
                repo=https://github.com/shin1x1/gihyo-devops-ansible-app.git
                dest={{deploy_laravel_root}}
                accept_hostkey=True
            tags:
                - deploy

          - name: Composerで依存解決
            composer:
                command=install
                working_dir={{deploy_laravel_root}}
                no_dev={{not deploy_laravel_debug}}
            tags:
                - deploy

          - name: .envテンプレートを転送
            template: src=files/deploy/.env.j2 dest={{deploy_laravel_root}}/.env
            tags:
                - deploy

          - name: データベースのマイグレーション
            shell: php artisan migrate --env {{ deploy_laravel_env }} --force
            become_user: vagrant
            args:
                chdir: "{{ deploy_laravel_root }}"
            when: deploy_laravel_debug
            tags:
                - deploy

          - name: サンプルデータを登録
            shell: php artisan db:seed --env {{ deploy_laravel_env }} --force
            become_user: vagrant
            args:
                chdir: "{{ deploy_laravel_root }}"
            when: deploy_laravel_debug
            tags:
                - deploy

          - name: Laravelを最適化
            shell: php artisan optimize chdir={{ deploy_laravel_root }}
            become_user: vagrant
            args:
                chdir: "{{ deploy_laravel_root }}"
            when: not deploy_laravel_debug
            tags:
                - deploy

      handlers:
          - name: Apacheを再起動
            service: name=apache2 state=restarted
